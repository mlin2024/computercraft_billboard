a = colors.lime
b = colors.yellow
c = colors.orange
d = colors.red
e = colors.blue
f = colors.lightBlue
g = colors.cyan
h = colors.green
i = colors.brown
j = colors.pink
k = colors.magenta
l = colors.purple
m = colors.black
n = colors.gray
o = colors.lightGray
p = colors.white
rednet.open("top")
id, message = rednet.receive()
id2, inputspeed = rednet.receive()
speed = 1.1 - (inputspeed/10)
array = {}
for ind = 1, string.len(message) do
	array[ind] = string.sub(message, ind, ind)
end
arraylen = table.getn(array)
if id == 41 then
	if(os.getComputerID()%2==1) then
		sleep((os.getComputerID()-17) * 2 * speed)
		for ind = 1, arraylen, 1 do
        		if array[ind] == "A" then
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+h+k+l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+g+j+k+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+d+f+i+j+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+h+i+l+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+g+k+l+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+f+j+k+m+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+e+i+j+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", i+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
			elseif array[ind] == "B" then
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+h+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+g+h+k+l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+d+f+g+j+k+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+f+i+j+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+i+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+h+l+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+g+k+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+f+j+m+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+e+i+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
			elseif array[ind] == "C" then
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+h+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+g+h+k+l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+d+f+g+h+j+k+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+f+g+h+i+j+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+f+g+h+i+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+f+g+h)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+f+g+h)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+f+g+h)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+e+f+g)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+e+f)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+e)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
			elseif array[ind] == "D" then
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+h+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+g+h+k+l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+d+f+g+j+k+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+f+i+j+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+i+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+h)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+g+h+l)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+f+g+k+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+e+f+j+k+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", e+i+j+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", i+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
			elseif array[ind] == "E" then
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+h+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+g+h+k+l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+d+f+g+j+k+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+f+i+j+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+i+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+m+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
			elseif array[ind] == "F" then
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+h+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+g+h+k+l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+d+f+g+j+k+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+f+i+j+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+i+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+m+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
			elseif array[ind] == "G" then
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+h+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+g+h+k+l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+d+f+g+j+k+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+f+i+j+m+n+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+i+m+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+m+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
			elseif array[ind] == "H" then
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+h+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+g+h+k+l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+f+g+j+k+l+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+e+f+i+j+k+l+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+e+i+j+k+l+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", i+j+k+l)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+h+i+j+k+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+g+h+i+j+k+l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+f+g+i+j+k+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+f+g+i+j+k+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+e+f+i+j+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
			elseif array[ind] == "I" then
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+h)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+g+h)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+d+f+g+h)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+f+g+h+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+f+g+h+k+l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+f+g+h+j+k+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+f+g+h+i+j+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+f+g+h+i+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+e+f+g)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+e+f)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+e)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
			elseif array[ind] == "J" then
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+h)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+g+h)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+d+f+g+h)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+f+g+h)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+f+g+h+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+f+g+h+k+l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+f+g+h+j+k+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+f+g+h+i+j+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+e+f+g+i+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+e+f)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+e)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
			elseif array[ind] == "K" then
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+h+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+g+h+k+l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+f+g+j+k+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+e+f+i+j+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+e+i+l+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", h+k+l+m+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+g+h+j+k+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+f+g+i+j+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+e+f+i)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+e)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
			elseif array[ind] == "L" then
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+h+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+g+h+k+l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+f+g+j+k+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+e+f+i+j+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+e+i+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
			elseif array[ind] == "M" then
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+h+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+g+h+k+l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+f+g+h+j+k+l+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+e+f+g+i+j+k+l+m+n+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+e+f+i+j+k+l+m+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", e+h+i+j+k+l+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+g+h+i+j+k+l+m+n+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+f+g+h+i+j+k+l+m+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+e+f+g+i+j+k+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+e+f+i+j+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+e+i+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
			elseif array[ind] == "N" then
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+h+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+g+h+k+l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+f+g+h+j+k+l+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+e+f+g+i+j+k+l+m+n+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+e+f+i+j+k+m+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", e+i+j+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+h+i+l+m+n+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+g+h+k+l+m+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+f+g+j+k+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+e+f+i+j+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+e+i+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
			elseif array[ind] == "O" then
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+h+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+g+h+k+l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+d+f+g+j+k+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+f+i+j+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+i+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+h+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+g+h+k+l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+f+g+j+k+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+e+f+i+j+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+e+i+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
			elseif array[ind] == "P" then
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+h+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+g+h+k+l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+d+f+g+h+j+k+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+f+g+h+i+j+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+f+g+h+i+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+f+g+h)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+f+g+h)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+f+g+h+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+e+f+g+k+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+e+f+j+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+e+i+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
			elseif array[ind] == "Q" then
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+h+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+g+h+k+l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+d+f+g+j+k+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+f+i+j+m+n+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+i+m+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+h+l+m+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+g+k+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+f+j+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+e+i+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
			elseif array[ind] == "R" then
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+h+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+g+h+k+l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+d+f+g+j+k+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+f+i+j+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+i+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+h+l+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+g+k+m+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+f+j+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+e+i+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
			elseif array[ind] == "S" then
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+h+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+g+h+k+l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+d+f+g+j+k+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+f+i+j+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+i+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+m+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
			elseif array[ind] == "T" then
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+h)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+g+h)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+d+f+g+h)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+f+g+h+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+f+g+h+k+l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+f+g+h+j+k+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+f+g+h+i+j+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+f+g+h+i+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+e+f+g)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+e+f)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+e)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
			elseif array[ind] == "U" then
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+h+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+g+h+k+l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+f+g+j+k+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+e+f+i+j+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+e+i+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+h+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+g+h+k+l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+f+g+j+k+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+e+f+i+j+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+e+i+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
			elseif array[ind] == "V" then
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+h+l)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+g+h+k+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+f+g+j+k+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+e+f+i+j+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", e+i+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", m+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", h+l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+g+h+k+l+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+f+g+j+k+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+e+f+i+j+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+e+i)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
			elseif array[ind] == "W" then
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+h+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+g+h+k+l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+f+g+j+k+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+e+f+i+j+m+n+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+e+i+m+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+h+l+m+n+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+g+h+k+l+m+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+f+g+j+k+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+e+f+i+j+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+e+i+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
			elseif array[ind] == "X" then
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+h)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+g+h+l)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+f+g+k+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+e+f+j+k+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", e+i+j+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", i+l+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", h+k+l+m+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+g+h+j+k+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+f+g+i+j+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+e+f+i)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+e)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
			elseif array[ind] == "Y" then
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+h)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+g+h+l)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+f+g+k+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+e+f+j+k+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", e+i+j+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", i+l+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", h+k+l+m+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+g+h+j+k+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+f+g+i+j+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+e+f+i)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+e)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
			elseif array[ind] == "Z" then
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+d)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+h+k+l+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+g+h+j+k+l+m+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+f+g+h+i+j+k+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+e+f+g+i+j+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+e+f+i)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+e)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
			elseif array[ind] == " " then
				sleep(11*speed)
			end
		end
	elseif(os.getComputerID()%2==0) then
		sleep((os.getComputerID()-18) * 2 * speed)
		for ind = 1, arraylen, 1 do
			if array[ind] == "A" then
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", h+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+g+h+k+l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+f+g+h+j+k+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+d+e+f+g+i+j+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+f+i+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+h)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+g+h+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+f+g+h+k+l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+e+f+g+j+k+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+e+f+i+j+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", e+i+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
			elseif array[ind] == "B" then
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+h+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+g+h+k+l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+d+f+g+j+k+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+f+i+j+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+i+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+h+l+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+g+k+m+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+f+j+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+e+i+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
			elseif array[ind] == "C" then
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+h+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+g+h+k+l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+f+g+j+k+l+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+e+f+i+j+k+l+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+e+i+j+k+l+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", i+j+k+l+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", i+j+k+l+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", i+j+k+l+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", i+j+k+m+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", i+j+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", i+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
			elseif array[ind] == "D" then
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+h+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+g+h+k+l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+f+g+j+k+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+e+f+i+j+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+e+i+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", l+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", h+k+l+m+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+g+h+j+k+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+f+g+i+j+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+e+f+i)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+e)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
			elseif array[ind] == "E" then
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+h+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+g+h+k+l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+d+f+g+j+k+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+f+i+j+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+i+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", m+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
			elseif array[ind] == "F" then
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+h+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+g+h+k+l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+d+f+g+j+k+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+f+i+j+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+i+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
			elseif array[ind] == "G" then
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+h+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+g+h+k+l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+f+g+j+k+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+d+e+f+i+j+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+c+d+e+i+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+d+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+h+l+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+g+k+m+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+f+j+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+e+i+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
			elseif array[ind] == "H" then
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+h+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+g+h+k+l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+f+g+j+k+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+e+f+i+j+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+e+i+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+h+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+g+h+k+l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+f+g+j+k+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+f+g+j+k+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+e+f+i+j+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
			elseif array[ind] == "I" then
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", k+l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", j+k+l+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+h+i+j+k+l+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+g+h+i+j+k+l+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+f+g+i+j+k+l+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+e+f+i+j+k+l+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+e+i+j+k+l+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", i+j+k+m+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", i+j+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", i+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
			elseif array[ind] == "J" then
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", h+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", g+k+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", f+j+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", e+i+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+h+l+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+g+h+k+l+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+f+g+j+k+m+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+e+f+i+j+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+e+i+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
			elseif array[ind] == "K" then
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+h+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+g+h+k+l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+d+f+g+h+j+k+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+f+g+h+i+j+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+f+g+h+i+l+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+e+f+g+h+k+l)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+e+f+g+j+k+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+e+f+i+j+k+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", e+i+j+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", i+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
			elseif array[ind] == "L" then
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+h+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+g+h+k+l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+f+g+j+k+l+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+e+f+i+j+k+l+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+e+i+j+k+l+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", i+j+k+l+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", i+j+k+l+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", i+j+k+l+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", i+j+k+m+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", i+j+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", i+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
			elseif array[ind] == "M" then
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+h+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+g+h+k+l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+f+g+j+k+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+d+e+f+i+j+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+c+d+e+i+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+d+h+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+c+d+g+h+k+l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+f+g+j+k+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+e+f+i+j+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+e+i+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
			elseif array[ind] == "N" then
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+h+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+g+h+k+l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+f+g+j+k+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+e+f+i+j+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+d+e+i+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+h)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+d+g+h+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+f+g+h+k+l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+e+f+g+j+k+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+e+f+i+j+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+e+i+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
			elseif array[ind] == "O" then
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+h+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+g+h+k+l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+f+g+j+k+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+e+f+i+j+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+e+i+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+h+l+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+g+h+k+l+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+f+g+j+k+m+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+e+f+i+j+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+e+i+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
			elseif array[ind] == "P" then
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+h+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+g+h+k+l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+d+f+g+j+k+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+f+i+j+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+i+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
			elseif array[ind] == "Q" then
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+h+l)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+g+h+k+l)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+f+g+j+k+l)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+e+f+i+j+k+l)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+d+e+i+j+k+l)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+h+i+j+k+l)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+d+g+h+i+j+k+l)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+c+f+g+i+j+k+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+e+f+i+j+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+e+i+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
			elseif array[ind] == "R" then
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+h+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+g+h+k+l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+d+f+g+j+k+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+f+i+j+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+e+h+i+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+g+h+l)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+f+g+k+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+e+f+j+k+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", e+i+j+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", i+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
			elseif array[ind] == "S" then
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+d+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+h+l+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+g+h+k+l+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+f+g+j+k+m+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+e+f+i+j+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+e+i+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
			elseif array[ind] == "T" then
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+h+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+g+h+k+l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+f+g+j+k+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+e+f+i+j+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+e+i+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
			elseif array[ind] == "U" then
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+h+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+g+h+k+l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+f+g+j+k+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+e+f+i+j+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+e+i+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+h+l+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+g+h+k+l+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+f+g+j+k+m+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+e+f+i+j+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+e+i+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
			elseif array[ind] == "V" then
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+h+l)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+g+k+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+f+j+k+l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+d+e+h+i+j+k+l+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+g+i+j+k+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+f+i+j+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+e+i)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
			elseif array[ind] == "W" then
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+h+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+g+h+k+l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+f+g+h+j+k+l+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+d+e+f+g+h+i+j+k+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+c+d+e+f+g+h+i+j+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+e+f+g+h+i+l)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+d+e+f+g+h+k+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+c+d+e+f+g+h+j+k+l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+e+f+g+i+j+k+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+e+f+i+j+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+e+i+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
			elseif array[ind] == "X" then
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", h+k+l+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+g+h+j+k+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+f+g+h+i+j+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+e+f+g+h+i+l)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+e+f+g+k+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+e+f+j+k+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", e+i+j+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", i+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
			elseif array[ind] == "Y" then
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+h+l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+d+g+h+k+l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+d+f+g+j+k+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+e+f+i+j+m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+e+i+m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
			elseif array[ind] == "Z" then
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", l+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", h+k+l+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", d+g+h+j+k+l+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", c+d+f+g+h+i+j+k+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", b+c+d+e+f+g+i+j+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+c+e+f+i+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+b+e+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", a+m+n+o+p)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", m+n+o)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", m+n)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", m)
				sleep(speed)
				redstone.setBundledOutput("back", 0)
				redstone.setBundledOutput("back", 0)
			elseif array[ind] == " " then
				sleep(11*speed)
			end
		end
	end
end
rednet.close()
